name: Terraform Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  GO_VERSION: '1.21'
  TERRAFORM_VERSION: '1.6.0'

jobs:
  validate:
    name: Terraform Validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        module:
          - '.'
          - 'modules/vpc'
          - 'modules/eks-cluster'
          - 'modules/eks-node-groups'
          - 'modules/rds'
          - 'modules/iam-roles'
          - 'modules/regional-eks'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Terraform fmt check
        run: terraform fmt -check -recursive ${{ matrix.module }}
        continue-on-error: true

      - name: Terraform init
        run: |
          cd ${{ matrix.module }}
          terraform init -backend=false

      - name: Terraform validate
        run: |
          cd ${{ matrix.module }}
          terraform validate

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go dependencies
        run: |
          cd test
          go mod download

      - name: Run VPC module tests
        run: |
          cd test
          go test -v -timeout 10m -run TestVPC

      - name: Run EKS cluster module tests
        run: |
          cd test
          go test -v -timeout 10m -run TestEKSCluster

      - name: Run EKS node groups module tests
        run: |
          cd test
          go test -v -timeout 10m -run TestEKSNodeGroups

      - name: Run RDS module tests
        run: |
          cd test
          go test -v -timeout 10m -run TestRDS

      - name: Run IAM roles module tests
        run: |
          cd test
          go test -v -timeout 10m -run TestIAMRoles

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download Go dependencies
        run: |
          cd test
          go mod download

      - name: Run regional EKS integration tests
        run: |
          cd test
          go test -v -timeout 20m -run TestRegionalEKS

      - name: Run multi-region integration tests
        run: |
          cd test
          go test -v -timeout 30m -run TestMultiRegionEKS

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run tfsec
        uses: aquasecurity/tfsec-action@v1.0.3
        with:
          additional_args: --soft-fail

      - name: Run Checkov
        uses: bridgecrewio/checkov-action@v12
        with:
          directory: .
          framework: terraform
          soft_fail: true

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: [validate, unit-tests, integration-tests, security-scan]
    if: always()

    steps:
      - name: Check test results
        run: |
          echo "Validation: ${{ needs.validate.result }}"
          echo "Unit Tests: ${{ needs.unit-tests.result }}"
          echo "Integration Tests: ${{ needs.integration-tests.result }}"
          echo "Security Scan: ${{ needs.security-scan.result }}"

          if [ "${{ needs.validate.result }}" != "success" ] || \
             [ "${{ needs.unit-tests.result }}" != "success" ] || \
             [ "${{ needs.integration-tests.result }}" != "success" ]; then
            echo "Some tests failed!"
            exit 1
          fi

          echo "All tests passed!"

      - name: Post to Slack
        if: failure() && github.ref == 'refs/heads/main'
        uses: slackapi/slack-github-action@v1.25.0
        with:
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}
          payload: |
            {
              "text": "Terraform tests failed on main branch",
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": "‚ùå *Terraform Tests Failed*\n*Repository:* ${{ github.repository }}\n*Branch:* ${{ github.ref_name }}\n*Commit:* ${{ github.sha }}\n*Author:* ${{ github.actor }}"
                  }
                }
              ]
            }
